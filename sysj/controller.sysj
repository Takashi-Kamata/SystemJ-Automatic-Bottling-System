reaction ControllerCD(:
		input signal request,
        input int channel FirstLiquid, input int channel SecondLiquid, input int channel ThirdLiquid, input int channel FourthLiquid,
        input int channel FirstLiquidAmount, input int channel SecondLiquidAmount, input int channel ThirdLiquidAmount, input int channel FourthLiquidAmount,
        input int channel LiquidFlow,
        input signal FirstLiquidDone, input signal SecondLiquidDone, input signal ThirdLiquidDone, input signal FourthLiquidDone,
     	output signal Liquid1On, output signal Liquid2On, output signal Liquid3On, output signal Liquid4On, output signal LiquidFillerDone
     	

		){
		
			int signal FirstLiquidInt, SecondLiquidInt, ThirdLiquidInt, FourthLiquidInt;
			int signal FirstLiquidAmountInt, SecondLiquidAmountInt, ThirdLiquidAmountInt, FourthLiquidAmountInt;
			
			signal NewOrder;
			signal CumulativeFlow;
			
			{

		        
				while(true) {
					present(request){
						
				        receive FirstLiquid;
				        receive FirstLiquidAmount;
				        
				      	
				      	sustain FirstLiquidInt((Integer) #FirstLiquid);
				      	sustain FirstLiquidAmountInt((Integer) #FirstLiquidAmount);
				      	
				      	sustain NewOrder;
					}
					
					pause;
				}
			}
			||
			{
				while(true) {
					present(FirstLiquidInt) {		
						System.out.println("AAA: Order " + #FirstLiquidInt);
					}
					
					pause;
				
				}
			}
			||
			{	// Liquid 1 Logic
				while (true) {	
					/*				
					present (NewOrder){
						if (#FirstLiquidInt == 1) {
							abort (FirstLiquidDone){
								sustain Liquid1On;
							}
						}
					}
					present (FirstLiquidDone){
						if (#SecondLiquidInt == 1) {
							abort (SecondLiquidDone){
								sustain Liquid1On;
							}
						}
					}
					present (SecondLiquidDone){
						if (#ThirdLiquidInt == 1) {
							abort (ThirdLiquidDone){
								sustain Liquid1On;
							}
						}
					}
					present (ThirdLiquidDone){
						if (#FourthLiquidInt == 1) {
							abort (FourthLiquidDone){
								sustain Liquid1On;
							}
						}
					}
					*/
					pause;
				}
			}
			
}

reaction PlantCD(:
		input signal LiquidFillerDone, input signal recipe, input signal enable,
		input signal Liquid1On, input signal Liquid2On, input signal Liquid3On, input signal Liquid4On,
		output int channel FirstLiquid, output int channel SecondLiquid, output int channel ThirdLiquid, output int channel FourthLiquid,
        output int channel FirstLiquidAmount, output int channel SecondLiquidAmount, output int channel ThirdLiquidAmount, output int channel FourthLiquidAmount,
        output int channel LiquidFlow,
        output signal FirstLiquidDone, output signal SecondLiquidDone, output signal ThirdLiquidDone, output signal FourthLiquidDone,
        
        output signal Liquid1OnE, output signal Liquid2OnE, output signal Liquid3OnE, output signal Liquid4OnE, output signal LiquidFillerDoneE

		){
			{				
				while(true) {
					present(recipe) {
						
						System.out.println("Plant Send Start");
						send FirstLiquid(1);
						send FirstLiquidAmount(10);
						
						System.out.println("Plant Send Finish");
					}
					/*
					present(Liquid1On && Liquid2On && Liquid3On && Liquid4On && LiquidFillerDone) {
						System.out.println("Liquid Status Received");
					}
					*/
					pause;
				}
				||
				{
					while(true) {
						abort(Liquid1On && enable){
							sustain FirstLiquidDone;
						}
						//await(!enable);
						pause;
					}
				}		
			}
			
}


Plant(..)->PlantCD
Controller(..)->ControllerCD